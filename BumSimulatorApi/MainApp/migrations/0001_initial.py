# Generated by Django 3.2 on 2021-04-26 06:51

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Eat_activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of eat')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of eat')),
                ('price', models.IntegerField(default=0, verbose_name='Price of eat')),
                ('howMuchHealthMin', models.IntegerField(default=0, verbose_name='Min count of adding health')),
                ('howMuchHealthMax', models.IntegerField(default=1, verbose_name='Max count of adding health')),
                ('howMuchEatMin', models.IntegerField(default=0, verbose_name='Min count of adding eat')),
                ('howMuchEatMax', models.IntegerField(default=1, verbose_name='Max count of adding eat')),
                ('howMuchHappyMin', models.IntegerField(default=0, verbose_name='Min count of adding happy')),
                ('howMuchHappyMax', models.IntegerField(default=1, verbose_name='Max count of adding happy')),
            ],
        ),
        migrations.CreateModel(
            name='Happy_activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of Happy')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of Happy')),
                ('price', models.IntegerField(default=0, verbose_name='Price of Happy')),
                ('howMuchHealthMin', models.IntegerField(default=0, verbose_name='Min count of adding health')),
                ('howMuchHealthMax', models.IntegerField(default=1, verbose_name='Max count of adding health')),
                ('howMuchEatMin', models.IntegerField(default=0, verbose_name='Min count of adding eat')),
                ('howMuchEatMax', models.IntegerField(default=1, verbose_name='Max count of adding eat')),
                ('howMuchHappyMin', models.IntegerField(default=0, verbose_name='Min count of adding happy')),
                ('howMuchHappyMax', models.IntegerField(default=1, verbose_name='Max count of adding happy')),
            ],
        ),
        migrations.CreateModel(
            name='Health_activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of Health')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of Health')),
                ('price', models.IntegerField(default=0, verbose_name='Price of Health')),
                ('howMuchHealthMin', models.IntegerField(default=0, verbose_name='Min count of adding health')),
                ('howMuchHealthMax', models.IntegerField(default=1, verbose_name='Max count of adding health')),
                ('howMuchEatMin', models.IntegerField(default=0, verbose_name='Min count of adding eat')),
                ('howMuchEatMax', models.IntegerField(default=1, verbose_name='Max count of adding eat')),
                ('howMuchHappyMin', models.IntegerField(default=0, verbose_name='Min count of adding happy')),
                ('howMuchHappyMax', models.IntegerField(default=1, verbose_name='Max count of adding happy')),
            ],
        ),
        migrations.CreateModel(
            name='Houses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of House')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of House')),
                ('price', models.IntegerField(default=0, verbose_name='Price')),
                ('howMuchRating', models.IntegerField(default=0, verbose_name='Count of adding rating')),
                ('unlockRating', models.IntegerField(verbose_name='Min rating for unlock')),
            ],
        ),
        migrations.CreateModel(
            name='Learning_params',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of Learning')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of Learning')),
                ('price', models.IntegerField(default=0, verbose_name='Min count of adding money')),
                ('howMuchRating', models.IntegerField(default=0, verbose_name='Count of adding rating')),
                ('unlockRating', models.IntegerField(verbose_name='Min rating for unlock')),
            ],
        ),
        migrations.CreateModel(
            name='NormalWorks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of NormalWork')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of NormalWork')),
                ('HowMuchEarningsMin', models.IntegerField(default=0, verbose_name='Min count of adding money')),
                ('HowMuchEarningsMax', models.IntegerField(default=0, verbose_name='Max count of adding money')),
                ('howMuchHealthMin', models.IntegerField(default=0, verbose_name='Min count of adding health')),
                ('howMuchHealthMax', models.IntegerField(default=1, verbose_name='Max count of adding health')),
                ('howMuchEatMin', models.IntegerField(default=0, verbose_name='Min count of adding eat')),
                ('howMuchEatMax', models.IntegerField(default=1, verbose_name='Max count of adding eat')),
                ('howMuchHappyMin', models.IntegerField(default=0, verbose_name='Min count of adding happy')),
                ('howMuchHappyMax', models.IntegerField(default=1, verbose_name='Max count of adding happy')),
                ('unlockRating', models.IntegerField(verbose_name='Min rating for unlock')),
            ],
        ),
        migrations.CreateModel(
            name='Personage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(max_length=150, verbose_name='Age')),
                ('money', models.IntegerField(default=500, verbose_name='Money')),
                ('items', models.IntegerField(default=10, verbose_name='Count of bottles')),
                ('status', models.CharField(choices=[('0', 'Бомж'), ('1', 'Младший бомж'), ('2', 'Нищеброд'), ('3', 'Босяк'), ('4', 'Старший бомж'), ('5', 'Искатель счастья')], default='0', max_length=2)),
                ('date', models.DateTimeField(blank=True, default=datetime.date(2005, 7, 14))),
                ('dateToTrack', models.DateTimeField(blank=True, default=datetime.date(2005, 7, 14))),
                ('happy_level', models.IntegerField(verbose_name='Happy level')),
                ('eat_level', models.IntegerField(verbose_name='Happy level')),
                ('health_level', models.IntegerField(verbose_name='Happy level')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='MainApp.houses', verbose_name='Personage house')),
            ],
        ),
        migrations.CreateModel(
            name='PersonageWorks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of PersonageWork')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of PersonageWork')),
                ('HowMuchEarningsMin', models.IntegerField(default=0, verbose_name='Min count of adding money')),
                ('HowMuchEarningsMax', models.IntegerField(default=0, verbose_name='Max count of adding money')),
                ('HowMuchEarningsItemsMin', models.IntegerField(default=0, verbose_name='Min count of adding Items')),
                ('HowMuchEarningsItemsMax', models.IntegerField(default=0, verbose_name='Max count of adding Items')),
                ('howMuchHealthMin', models.IntegerField(default=0, verbose_name='Min count of adding health')),
                ('howMuchHealthMax', models.IntegerField(default=1, verbose_name='Max count of adding health')),
                ('howMuchEatMin', models.IntegerField(default=0, verbose_name='Min count of adding eat')),
                ('howMuchEatMax', models.IntegerField(default=1, verbose_name='Max count of adding eat')),
                ('howMuchHappyMin', models.IntegerField(default=0, verbose_name='Min count of adding happy')),
                ('howMuchHappyMax', models.IntegerField(default=1, verbose_name='Max count of adding happy')),
                ('unlockRating', models.IntegerField(verbose_name='Min rating for unlock')),
            ],
        ),
        migrations.CreateModel(
            name='Transports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, null=True, verbose_name='Name of Transport')),
                ('description', models.TextField(max_length=100, null=True, verbose_name='Description of Transport')),
                ('price', models.IntegerField(default=0, verbose_name='Price')),
                ('howMuchRating', models.IntegerField(default=0, verbose_name='Count of adding rating')),
                ('unlockRating', models.IntegerField(verbose_name='Min rating for unlock')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Id', models.IntegerField(unique=True)),
                ('Username', models.TextField(max_length=100, null=True, verbose_name='User Name')),
                ('Firstname', models.TextField(max_length=100, null=True, verbose_name='First Name')),
                ('LastName', models.TextField(max_length=100, null=True, verbose_name='Last Name')),
                ('Character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='MainApp.personage')),
            ],
        ),
        migrations.AddField(
            model_name='personage',
            name='transport',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='MainApp.transports', verbose_name='Personage transport'),
        ),
    ]
